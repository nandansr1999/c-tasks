3.Binary Search with Recursive Approach
#include <stdio.h>

int recursiveBinarySearch(int arr[], int left, int right, int num) {
    if (left > right) {
        return -1;
    }

    int mid = (left + right) / 2;

    if (arr[mid] == num) {
        return mid;
    }
    else if (arr[mid] < num) {
        return recursiveBinarySearch(arr, mid + 1, right, num);
    }
    else {
        return recursiveBinarySearch(arr, left, mid - 1, num);
    }
}

int main() {
    int size, num;

    printf("Enter the number of elements in the sorted array: ");
    scanf("%d", &size);

    int arr[size];

    printf("Enter the sorted array elements:\n");
    for (int i = 0; i < size; i++) {
        scanf("%d", &arr[i]);
    }

    printf("Enter the element to search for: ");
    scanf("%d", &num);

    int result = recursiveBinarySearch(arr, 0, size - 1, num);

    if (result != -1) {
        printf("Element found at index: %d\n", result);
    } else {
        printf("Element not found\n");
    }

    return 0;
}
