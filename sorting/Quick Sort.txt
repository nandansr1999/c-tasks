
write a C program to sort an array using quick sort

#include <stdio.h>
void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}
int partition(int a[], int low, int high) {
    int pivot = a[high];  
    int i = (low - 1);    

    for (int j = low; j < high; j++) {
        
        if (a[j] <= pivot) {
            i++;            
            swap(&a[i], &a[j]);
        }
    }
    swap(&a[i + 1], &a[high]); 
    return (i + 1);            
}
void quickSort(int a[], int low, int high) {
    if (low < high) {
        int pi = partition(a, low, high);
        quickSort(a, low, pi - 1);
        quickSort(a, pi + 1, high);
    }
}
void printArray(int a[], int size) {
    for (int i = 0; i < size; i++)
        printf("%d ", a[i]);
    printf("\n");
}
int main() {
    int a[] = {10, 7, 8, 9, 1, 5};
    int n = sizeof(a) / sizeof(a[0]);
    printf("Unsorted array: \n");
    printArray(a, n);
    quickSort(a, 0, n - 1);
    printf("Sorted array: \n");
    printArray(a, n);
    return 0;
}
